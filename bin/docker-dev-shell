#!/bin/bash

set -e

IMAGE_NAME="${IMAGE_NAME:=dependabot/dependabot-core-development}"
DOCKERFILE="Dockerfile.development"
HELP=false
REBUILD=false

OPTS=`getopt -o hr: --long help,rebuild: -n 'parse-options' -- "$@"`
if [ $? != 0 ]; then
  echo "failed parsing options" >&2
  exit 1
fi

while true; do
  case "$1" in
    -h | --help ) HELP=true; shift ;;
    -r | --rebuild ) REBUILD=true; shift ;;
    -- ) shift; break ;;
    * ) break ;;
  esac
done

if [ "$HELP" = "true" ]; then
  echo "usage: $0 [--rebuild] [ARGS]"
  exit 0
fi

build_image() {
  echo "$(tput setaf 2)=> building image from $DOCKERFILE$(tput sgr0)"
  docker build --build-arg "USER_UID=$UID" --build-arg "USER_GID=$(id -g)" -t "$IMAGE_NAME" -f "$DOCKERFILE" .
}

IMAGE_ID=$(docker inspect --type=image -f '{{.Id}}' "$IMAGE_NAME" 2> /dev/null || true)
if [ -z "$IMAGE_ID" ]; then
  echo "$(tput setaf 4) > image $IMAGE_NAME doesn't exist$(tput sgr0)"
  build_image
elif [ "$REBUILD" = "true" ]; then
  echo "$(tput setaf 4) > rebuild of $IMAGE_NAME requested$(tput sgr0)"
  build_image
else
  echo "$(tput setaf 4) > image $IMAGE_NAME already exists$(tput sgr0)"
fi

DOCKER_OPTS=()
if [ -n "$HTTP_PROXY" ]; then
  DOCKER_OPTS+=(-e "http_proxy=$HTTP_PROXY")
  DOCKER_OPTS+=(-e "HTTP_PROXY=$HTTP_PROXY")
fi
if [ -n "$HTTPS_PROXY" ]; then
  DOCKER_OPTS+=(-e "https_proxy=$HTTPS_PROXY")
  DOCKER_OPTS+=(-e "HTTPS_PROXY=$HTTPS_PROXY")
fi

if [ -n "$DOCKER_NETWORK" ]; then
  DOCKER_OPTS+=(--network "$DOCKER_NETWORK")
fi

CONTAINER_ARGS=("bash")
if [ "$#" -gt "0" ]; then
  CONTAINER_ARGS=("$@")
fi

function add_volume() {
  local fname=$1
  local dir=$2
  local target=$3
  if [ -e "$dir/$fname" ]; then
    echo "-v" "$dir/$fname:$target/$fname"
  fi
}

echo "$(tput setaf 2)=> running docker development shell$(tput sgr0)"
CODE_DIR="/home/dependabot/dependabot-core"
VOLUME_ARGS=()
# Search for Gemfiles in any 2nd-level folders, and add volumes linking relevant files
for gemfile in $PWD/*/Gemfile; do
  pm_dir="$(dirname $gemfile)"
  dirname="$(basename $pm_dir)"
  target="$CODE_DIR/$dirname"
  VOLUME_ARGS+=( $(add_volume 'Gemfile' $pm_dir $target)
                 $(add_volume "dependabot-$dirname.gemspec" $pm_dir $target)
                 $(add_volume 'lib' $pm_dir $target)
                 $(add_volume 'spec' $pm_dir $target) )
done
docker run --rm -ti \
  -v "$PWD/.rubocop.yml:$CODE_DIR/.rubocop.yml" \
  -v "$PWD/bin:$CODE_DIR/bin" \
  -v "$PWD/common/bin:$CODE_DIR/common/bin" \
  "${VOLUME_ARGS[@]}" \
  "${DOCKER_OPTS[@]}" \
  --cap-add=SYS_PTRACE \
  "$IMAGE_NAME" "${CONTAINER_ARGS[@]}"
